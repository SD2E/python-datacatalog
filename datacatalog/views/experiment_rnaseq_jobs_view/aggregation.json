{
    "view_on": "jobs",
    "pipeline": [
      {
	        "$match": {
	            "child_of": { "$not": {"$size": 0} },
	            "state": { "$in": ["FINISHED", "VALIDATED"] }
	        }
	    },
	    {
	    	"$lookup": {
		        "from": "pipelines",
		        "localField": "pipeline_uuid",
		        "foreignField": "uuid",
		        "as": "nc_rnaseq_jobs"
		    }
	    },
	    {
	        "$match": {
	        	"nc_rnaseq_jobs.name": { "$regex" : "RNA-Seq QC and Metadata Pipeline" }
	        }
	    },
	    {
	        "$lookup": {
	            "from": "experiments",
	            "localField": "child_of",
	            "foreignField": "uuid",
	            "as": "experiment_rnaseq_jobs"
	        }
	    },
	    {
	    	"$unwind": "$experiment_rnaseq_jobs"
	    },
	    {
	        "$lookup": {
	            "from": "experiment_designs",
	            "localField": "experiment_rnaseq_jobs.child_of",
	            "foreignField": "uuid",
	            "as": "experiment_design_rnaseq_jobs"
	        }
	    },
	    {
	        "$unwind": "$experiment_design_rnaseq_jobs"
	    },
	    {
	        "$addFields": {
	            "derived_from": {
	                "$ifNull": [ "$experiment_rnaseq_jobs.derived_from", ["unspecified"] ]
	            }
	        }
	    },
	    {
	        "$lookup": {
	            "from": "files",
	            "localField": "derived_from",
	            "foreignField": "uuid",
	            "as": "experiment_design_files_rnaseq_jobs"
	        }
	    },
      {
	    	"$lookup": {
		        "from": "files",
		        "localField": "uuid",
		        "foreignField": "child_of",
		        "as": "outputs"
		    }
	    },
	    {
          "$unwind": "$outputs"
      },
	    {
          "$addFields": {
            "outputs":"$outputs.name"
            }
      },
      {
	    	"$lookup": {
		        "from": "files",
		        "localField": "product_patterns.derived_from",
		        "foreignField": "name",
		        "as": "input_dfs"
		    }
	    },
	    {
	    	"$lookup": {
		        "from": "jobs",
		        "localField": "input_dfs.child_of",
		        "foreignField": "uuid",
		        "as": "df_job"
		    }
	    },
	    {
          "$unwind": "$df_job"
      },
	    {
          "$addFields": {
            "input_gff":"$df_job.data.inputs.path_gff"
            }
      },
	    {
	        "$project": {
	            "_id": false,
	            "experiment_id": "$experiment_rnaseq_jobs.experiment_id",
	            "experiment_design_id": "$experiment_design_rnaseq_jobs.experiment_design_id",
			    "storage_system": {
			        "$cond": {
			            "if": { "$eq": [ { "$arrayElemAt": [ "$derived_from", 0 ] }, "unspecified" ] },
			            "then": "unspecified",
			            "else": { "$arrayElemAt": ["$experiment_design_files_rnaseq_jobs.storage_system", 0] }
			        }
			    },
			    "samples_json": {
			        "$cond": {
			            "if": { "$eq": [ { "$arrayElemAt": [ "$derived_from", 0 ] }, "unspecified" ] },
			            "then": "unspecified",
			            "else": { "$arrayElemAt": ["$experiment_design_files_rnaseq_jobs.name", 0] }
			        }
			    },
	            "job_uuid": "$uuid",
	            "last_updated": "$updated",
	            "state": "$state",
	            "archive_path": "$archive_path",
              "outputs":"$outputs",
              "input_gff": "$input_gff"
	        }
	    },
	    {
	        "$group": {
	            "_id": {
	                "experiment_id": "$experiment_id",
	                "experiment_design_id": "$experiment_design_id",
	                "storage_system": "$storage_system",
	                "samples_json": "$samples_json"
	            },
	            "jobs": {
	                "$addToSet": {
	                    "job_uuid": "$job_uuid",
	                    "last_updated": "$last_updated",
	                    "state": "$state",
	                    "archive_path": "$archive_path",
	                    "input_gff": "$input_gff"
	                }
	            },
              "outputs": {"$addToSet": "$outputs"}
	        }
	    },
	    {
	        "$sort": {
	            "_id.experiment_id": 1
	        }
	    }
    ]
}